{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","require","App","state","markdown","this","setState","className","Form","Group","Label","Control","as","rows","placeholder","onChange","e","updateMarkdown","target","value","id","dangerouslySetInnerHTML","__html","breaks","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAKMA,EAASC,EAAQ,IA4DRC,E,4MAzDbC,MAAQ,CACNC,SAAS,+Y,6DAgCIA,GACbC,KAAKC,SAAS,CAACF,e,+BAGP,IAAD,OACFA,EAAYC,KAAKF,MAAjBC,SACL,OACE,sBAAKG,UAAU,sBAAf,UACE,oBAAIA,UAAU,YAAd,2CACA,cAACC,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,6BACA,cAACF,EAAA,EAAKG,QAAN,CAAcC,GAAG,WAAWC,KAAK,KAAKC,YAAaV,EAAUW,SAAU,SAACC,GAAD,OAAO,EAAKC,eAAeD,EAAEE,OAAOC,QAAQC,GAAG,gBAG1H,gCACE,6DACA,qBAAKA,GAAG,UAAUC,wBAAyB,CAACC,OAAQtB,EAAOI,EAAU,CAACmB,QAAQ,iB,GAnDtEC,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.88c119f2.chunk.js","sourcesContent":["import './App.css';\nimport { React, Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\n\nconst marked = require('marked');\n\nclass App extends Component {\n  state = {\n    markdown: `\\\n# This is Markdown Previewer By Demo\n\n## Bootstrap is utilized\n\nHeres some HTML code, \\`<div></div>\\`\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction sum(a, b) {\nreturn a + b;\n}\n\\`\\`\\`\n\n**bold text**\n\n_italic text_\n\n**_both!_**\n\n~~crossing stuff out~~.\n\n> Block Quote\n\n* First\n* Second\n* Third\n\n[![Github Logo](https://marked.js.org/img/logo-black.svg)](https://marked.js.org/)`\n  }\n\n  updateMarkdown(markdown) {\n    this.setState({markdown})\n  }\n\n  render() {\n    let {markdown} = this.state;\n    return (\n      <div className=\"App container-fluid\">\n        <h1 className='text-info'>Markdown Previewer v2 By Demo</h1>\n        <Form>\n          <Form.Group>\n            <Form.Label>Enter Markdown</Form.Label>\n            <Form.Control as=\"textarea\" rows='10' placeholder={markdown} onChange={(e) => this.updateMarkdown(e.target.value)} id=\"editor\" />\n          </Form.Group>\n        </Form>\n        <div>\n          <h5>Preview Converted Markdown:</h5>\n          <div id=\"preview\" dangerouslySetInnerHTML={{__html: marked(markdown, {breaks: true})}}></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}